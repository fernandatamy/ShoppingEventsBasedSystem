services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    # networks:
    #   - custom_network
  kafka:
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - 29092:29092
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
#     networks:
#       - custom_network
# networks:
#   custom_network:
#     external: true

  # kafka-init:
  #   image: wurstmeister/kafka:latest
  #   # networks:
  #   #   - container
  #   command: [ "/bin/bash", "-c", "/create_topic.sh"]
  #   environment:
  #     - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - TOPIC_LOG=kafka-log
  #     - TOPIC_DLQ=dlq-topic
  #     - TOPIC_ECOMMERCE=kafka-purchase
  #     - TOPIC_PAYMENT=kafka-approval
  #     - TOPIC_DISPATCH=kafka-dispatch
  #     - TOPIC_SHIPPING=kafka-shipping
  #   depends_on:
  #     kafka:
  #       condition: service_started
  #   volumes:
  #     - type: bind
  #       source: ./create_topic.sh
  #       target: /create_topic.sh
  #   init: true
